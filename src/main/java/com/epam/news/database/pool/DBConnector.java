package com.epam.news.database.pool;

import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.SQLException;
import java.util.Locale;
import java.util.Properties;

import org.apache.log4j.Logger;

import com.epam.news.util.ConfigurationManager;



class DBConnector {
	public static Logger log = Logger.getLogger(DBConnector.class);
	Properties properties = new Properties();

	/**
	 * This method, return necessary data for creating connections. These
	 * actions separated in to the own method, in order to reduce numbers of
	 * access to external resources(only one time, when pool is creating).
	 */
	private String initConnectionProperties() {
		// Take URL from the properties file
		String url = ConfigurationManager.getProperty("db.url");

		// Filling properties.
		/*
		 * Properties is a subclass of Hashtable. It is used to maintain lists
		 * of values in which the key is a String and the value is also a
		 * String.
		 */
		properties.setProperty("user",
				ConfigurationManager.getProperty("db.user"));
		properties.setProperty("password",
				ConfigurationManager.getProperty("db.password"));
		

		try {
			// Register the driver
			Locale.setDefault(Locale.ENGLISH);
			DriverManager.registerDriver(new oracle.jdbc.OracleDriver());

		} catch (SQLException e) {
			throw new RuntimeException("Can't register SQL driver" + e.getMessage(), e);
		}
		return url;

	}

	/**
	 * Create connection, using data, generated by method
	 * "initConnectionProperties" Thus, we do not make any access to the
	 * external resources. All actions already had been performed by
	 * "initConnectionProperties" method.(one time only, when pool is
	 * creating)
	 */
	public Connection getConnection() {
		Connection connection = null;

		try {

			
			connection = DriverManager.getConnection(
					initConnectionProperties(), properties);
			
			

		} catch (SQLException e) {
			log.error("Technical Exception", e);
		}

		return connection;
	}
}